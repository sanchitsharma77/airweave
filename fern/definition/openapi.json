{
  "openapi": "3.1.0",
  "info": {
    "title": "Airweave",
    "version": "0.1.0",
    "description": "\n\n## API Groups\nThis API spec only includes the following API groups:\n- **Sources**: API endpoints for discovering available data source connectors and their configuration requirements\n- **Collections**: API endpoints for managing collections - logical groups of data sources that provide unified search capabilities\n- **Source Connections**: API endpoints for managing live connections to data sources. Source connections are the actual configured instances that Airweave uses to sync data from your apps and databases, transforming it into searchable, structured information within collections\n"
  },
  "paths": {
    "/sources": {
      "get": {
        "tags": [
          "sources"
        ],
        "summary": "List",
        "description": "List all available data source connectors.\n\n<br/><br/>\nReturns the complete catalog of source types that Airweave can connect to.",
        "operationId": "list_sources_get",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Source"
                  },
                  "title": "Response List Sources Get"
                },
                "examples": {
                  "available_sources": {
                    "summary": "List of all available data source connectors",
                    "value": [
                      {
                        "id": "550e8400-e29b-41d4-a716-446655440000",
                        "name": "GitHub",
                        "description": "Connect to GitHub repositories for code, issues, pull requests, and documentation",
                        "auth_type": "config_class",
                        "auth_config_class": "GitHubAuthConfig",
                        "config_class": "GitHubConfig",
                        "short_name": "github",
                        "class_name": "GitHubSource",
                        "output_entity_definition_ids": [
                          "def12345-6789-abcd-ef01-234567890abc",
                          "def67890-abcd-ef01-2345-67890abcdef1"
                        ],
                        "labels": [
                          "code"
                        ],
                        "created_at": "2024-01-01T00:00:00Z",
                        "modified_at": "2024-01-01T00:00:00Z",
                        "auth_fields": {
                          "fields": [
                            {
                              "name": "personal_access_token",
                              "title": "Personal Access Token",
                              "description": "GitHub Personal Access Token with repository read permissions",
                              "type": "string",
                              "secret": true
                            },
                            {
                              "name": "repo_name",
                              "title": "Repository Name",
                              "description": "Full repository name in format 'owner/repo'",
                              "type": "string"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sources/{short_name}": {
      "get": {
        "tags": [
          "sources"
        ],
        "summary": "Get",
        "description": "Get detailed information about a specific data source connector.",
        "operationId": "get_sources__short_name__get",
        "parameters": [
          {
            "name": "short_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Technical identifier of the source type (e.g., 'github', 'stripe', 'slack')",
              "title": "Short Name"
            },
            "description": "Technical identifier of the source type (e.g., 'github', 'stripe', 'slack')"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Source"
                },
                "examples": {
                  "github_source": {
                    "summary": "Source details with authentication and configuration schemas",
                    "value": {
                      "id": "550e8400-e29b-41d4-a716-446655440000",
                      "name": "GitHub",
                      "description": "Connect to GitHub repositories for code, issues, pull requests, and documentation",
                      "auth_type": "config_class",
                      "auth_config_class": "GitHubAuthConfig",
                      "config_class": "GitHubConfig",
                      "short_name": "github",
                      "class_name": "GitHubSource",
                      "output_entity_definition_ids": [
                        "def12345-6789-abcd-ef01-234567890abc",
                        "def67890-abcd-ef01-2345-67890abcdef1"
                      ],
                      "labels": [
                        "code"
                      ],
                      "created_at": "2024-01-01T00:00:00Z",
                      "modified_at": "2024-01-01T00:00:00Z",
                      "auth_fields": {
                        "fields": [
                          {
                            "name": "personal_access_token",
                            "title": "Personal Access Token",
                            "description": "GitHub Personal Access Token with repository read permissions",
                            "type": "string",
                            "secret": true
                          },
                          {
                            "name": "repo_name",
                            "title": "Repository Name",
                            "description": "Full repository name in format 'owner/repo'",
                            "type": "string"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/collections": {
      "get": {
        "tags": [
          "collections"
        ],
        "summary": "List",
        "description": "List all collections that belong to your organization.",
        "operationId": "list_collections_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Number of collections to skip for pagination",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of collections to skip for pagination"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Maximum number of collections to return (1-1000)",
              "default": 100,
              "title": "Limit"
            },
            "description": "Maximum number of collections to return (1-1000)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Collection"
                  },
                  "title": "Response List Collections Get"
                },
                "examples": {
                  "collections_list": {
                    "summary": "Finance data collection",
                    "value": [
                      {
                        "id": "550e8400-e29b-41d4-a716-446655440000",
                        "name": "Finance Data",
                        "readable_id": "finance-data-ab123",
                        "created_at": "2024-01-15T09:30:00Z",
                        "modified_at": "2024-01-15T14:22:15Z",
                        "organization_id": "org12345-6789-abcd-ef01-234567890abc",
                        "created_by_email": "admin@company.com",
                        "modified_by_email": "finance@company.com",
                        "status": "ACTIVE"
                      }
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "collections"
        ],
        "summary": "Create",
        "description": "Create a new collection.\n\nThe newly created collection is initially empty and does not contain any data\nuntil you explicitly add source connections to it.",
        "operationId": "create_collections_post",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collection"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/collections/{readable_id}": {
      "get": {
        "tags": [
          "collections"
        ],
        "summary": "Get",
        "description": "Retrieve a specific collection by its readable ID.",
        "operationId": "get_collections__readable_id__get",
        "parameters": [
          {
            "name": "readable_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique readable identifier of the collection (e.g., 'finance-data-ab123')",
              "title": "Readable Id"
            },
            "description": "The unique readable identifier of the collection (e.g., 'finance-data-ab123')"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collection"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "collections"
        ],
        "summary": "Delete",
        "description": "Delete a collection and all associated data.\n\nPermanently removes a collection from your organization including all synced data\nfrom the destination systems. All source connections within this collection\nwill also be deleted as part of the cleanup process. This action cannot be undone.",
        "operationId": "delete_collections__readable_id__delete",
        "parameters": [
          {
            "name": "readable_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique readable identifier of the collection to delete",
              "title": "Readable Id"
            },
            "description": "The unique readable identifier of the collection to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collection"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/collections/{readable_id}/refresh_all": {
      "post": {
        "tags": [
          "collections"
        ],
        "summary": "Refresh All Source Connections",
        "description": "Trigger data synchronization for all source connections in the collection.\n\nThe sync jobs run asynchronously in the background, so this endpoint\nreturns immediately with job details that you can use to track progress. You can\nmonitor the status of individual data synchronization using the source connection\nendpoints.",
        "operationId": "refresh_all_source_connections_collections__readable_id__refresh_all_post",
        "parameters": [
          {
            "name": "readable_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique readable identifier of the collection to refresh",
              "title": "Readable Id"
            },
            "description": "The unique readable identifier of the collection to refresh"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SourceConnectionJob"
                  },
                  "title": "Response Refresh All Source Connections Collections  Readable Id  Refresh All Post"
                },
                "examples": {
                  "sync_job_history": {
                    "summary": "Multiple sync jobs triggered",
                    "value": [
                      {
                        "source_connection_id": "550e8400-e29b-41d4-a716-446655440000",
                        "id": "987fcdeb-51a2-43d7-8f3e-1234567890ab",
                        "organization_id": "org12345-6789-abcd-ef01-234567890abc",
                        "created_by_email": "engineering@company.com",
                        "modified_by_email": "engineering@company.com",
                        "created_at": "2024-01-15T14:00:00Z",
                        "modified_at": "2024-01-15T14:05:22Z",
                        "status": "completed",
                        "entities_inserted": 45,
                        "entities_updated": 12,
                        "entities_deleted": 3,
                        "entities_kept": 234,
                        "entities_skipped": 8,
                        "entities_encountered": {
                          "issues": 67,
                          "pull_requests": 23,
                          "commits": 156,
                          "releases": 12,
                          "readme_files": 8
                        },
                        "started_at": "2024-01-15T14:00:15Z",
                        "completed_at": "2024-01-15T14:05:22Z"
                      }
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/collections/{readable_id}/search": {
      "get": {
        "tags": [
          "collections"
        ],
        "summary": "Search Get Legacy",
        "description": "Legacy GET search endpoint for backwards compatibility.\n\nDEPRECATED: This endpoint uses the old schema. Please migrate to POST with the new\nSearchRequest format for access to all features.",
        "operationId": "search_get_legacy_collections__readable_id__search_get",
        "deprecated": true,
        "parameters": [
          {
            "name": "readable_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique readable identifier of the collection to search",
              "title": "Readable Id"
            },
            "description": "The unique readable identifier of the collection to search"
          },
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The search query text to find relevant documents and data",
              "title": "Query"
            },
            "description": "The search query text to find relevant documents and data"
          },
          {
            "name": "response_type",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ResponseType",
              "description": "Format of the response: 'raw' returns search results, 'completion' returns AI-generated answers",
              "default": "raw"
            },
            "description": "Format of the response: 'raw' returns search results, 'completion' returns AI-generated answers"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Maximum number of results to return",
              "default": 100,
              "title": "Limit"
            },
            "description": "Maximum number of results to return"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of results to skip for pagination",
              "default": 0,
              "title": "Offset"
            },
            "description": "Number of results to skip for pagination"
          },
          {
            "name": "recency_bias",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number",
                  "maximum": 1.0,
                  "minimum": 0.0
                },
                {
                  "type": "null"
                }
              ],
              "description": "How much to weigh recency vs similarity (0..1)",
              "title": "Recency Bias"
            },
            "description": "How much to weigh recency vs similarity (0..1)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegacySearchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "collections"
        ],
        "summary": "Search",
        "description": "Search your collection.\n\nAccepts both new SearchRequest and legacy LegacySearchRequest formats\nfor backwards compatibility.",
        "operationId": "search_collections__readable_id__search_post",
        "parameters": [
          {
            "name": "readable_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique readable identifier of the collection",
              "title": "Readable Id"
            },
            "description": "The unique readable identifier of the collection"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/SearchRequest"
                  },
                  {
                    "$ref": "#/components/schemas/LegacySearchRequest"
                  }
                ],
                "title": "Search Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/SearchResponse"
                    },
                    {
                      "$ref": "#/components/schemas/LegacySearchResponse"
                    }
                  ],
                  "title": "Response Search Collections  Readable Id  Search Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/source-connections": {
      "post": {
        "tags": [
          "source-connections"
        ],
        "summary": "Create",
        "description": "Create a new source connection.\n\nThe authentication configuration determines the flow:\n- DirectAuthentication: Immediate creation with provided credentials\n- OAuthBrowserAuthentication: Returns shell with authentication URL\n- OAuthTokenAuthentication: Immediate creation with provided token\n- AuthProviderAuthentication: Using external auth provider\n\nBYOC (Bring Your Own Client) is detected when client_id and client_secret\nare provided in OAuthBrowserAuthentication.\n\nsync_immediately defaults:\n- True for: direct, oauth_token, auth_provider\n- False for: oauth_browser, oauth_byoc (these sync after authentication)",
        "operationId": "create_source_connections_post",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceConnectionCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceConnection"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "source-connections"
        ],
        "summary": "List",
        "description": "List source connections with minimal fields for performance.",
        "operationId": "list_source_connections_get",
        "parameters": [
          {
            "name": "collection",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by collection readable ID",
              "title": "Collection"
            },
            "description": "Filter by collection readable ID"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SourceConnectionListItem"
                  },
                  "title": "Response List Source Connections Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/source-connections/{source_connection_id}": {
      "get": {
        "tags": [
          "source-connections"
        ],
        "summary": "Get",
        "description": "Get a source connection with optional depth expansion.",
        "operationId": "get_source_connections__source_connection_id__get",
        "parameters": [
          {
            "name": "source_connection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Source Connection Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceConnection"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "source-connections"
        ],
        "summary": "Update",
        "description": "Update a source connection.\n\nUpdateable fields:\n- name, description\n- config_fields\n- cron_schedule\n- auth_fields (direct auth only)",
        "operationId": "update_source_connections__source_connection_id__patch",
        "parameters": [
          {
            "name": "source_connection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Source Connection Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceConnectionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceConnection"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "source-connections"
        ],
        "summary": "Delete",
        "description": "Delete a source connection and all related data.",
        "operationId": "delete_source_connections__source_connection_id__delete",
        "parameters": [
          {
            "name": "source_connection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Source Connection Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceConnection"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/source-connections/{source_connection_id}/run": {
      "post": {
        "tags": [
          "source-connections"
        ],
        "summary": "Run",
        "description": "Trigger a sync run for a source connection.\n\nRuns are always executed through Temporal workflow engine.",
        "operationId": "run_source_connections__source_connection_id__run_post",
        "parameters": [
          {
            "name": "source_connection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Source Connection Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceConnectionJob"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/source-connections/{source_connection_id}/jobs": {
      "get": {
        "tags": [
          "source-connections"
        ],
        "summary": "Get Source Connection Jobs",
        "description": "Get sync jobs for a source connection.",
        "operationId": "get_source_connection_jobs_source_connections__source_connection_id__jobs_get",
        "parameters": [
          {
            "name": "source_connection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Source Connection Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SourceConnectionJob"
                  },
                  "title": "Response Get Source Connection Jobs Source Connections  Source Connection Id  Jobs Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/source-connections/{source_connection_id}/jobs/{job_id}/cancel": {
      "post": {
        "tags": [
          "source-connections"
        ],
        "summary": "Cancel Job",
        "description": "Cancel a running sync job for a source connection.\n\nThis endpoint requests cancellation and marks the job as CANCELLING.\nThe workflow updates the final status to CANCELLED when it processes\nthe cancellation request.",
        "operationId": "cancel_job_source_connections__source_connection_id__jobs__job_id__cancel_post",
        "parameters": [
          {
            "name": "source_connection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Source Connection Id"
            }
          },
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Job Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceConnectionJob"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "APIKey": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "organization": {
            "type": "string",
            "format": "uuid",
            "title": "Organization"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "last_used_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Used Date"
          },
          "expiration_date": {
            "type": "string",
            "format": "date-time",
            "title": "Expiration Date"
          },
          "created_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Email"
          },
          "modified_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified By Email"
          },
          "decrypted_key": {
            "type": "string",
            "title": "Decrypted Key"
          }
        },
        "type": "object",
        "required": [
          "id",
          "organization",
          "created_at",
          "modified_at",
          "expiration_date",
          "decrypted_key"
        ],
        "title": "APIKey",
        "description": "Schema for API keys returned to clients - includes decrypted key."
      },
      "APIKeyCreate": {
        "properties": {
          "expiration_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expiration Date",
            "description": "Expiration date for the API key, defaults to 180 days from now"
          }
        },
        "type": "object",
        "title": "APIKeyCreate",
        "description": "Schema for creating an APIKey object."
      },
      "ActionCheckRequest": {
        "properties": {
          "actions": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Actions",
            "description": "Map of action short name to amount to check",
            "examples": [
              {
                "entities": 1,
                "queries": 1,
                "source_connections": 1
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "actions"
        ],
        "title": "ActionCheckRequest",
        "description": "Request body for checking multiple actions at once."
      },
      "ActionCheckResponse": {
        "properties": {
          "results": {
            "additionalProperties": {
              "$ref": "#/components/schemas/SingleActionCheckResponse"
            },
            "type": "object",
            "title": "Results"
          }
        },
        "type": "object",
        "required": [
          "results"
        ],
        "title": "ActionCheckResponse",
        "description": "Response containing per-action check results."
      },
      "AuthProvider": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name",
            "description": "Human-readable name of the auth provider (e.g., 'Google OAuth', 'GitHub')"
          },
          "short_name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Short Name",
            "description": "Technical identifier used internally to reference this auth provider. Must be unique."
          },
          "class_name": {
            "type": "string",
            "title": "Class Name",
            "description": "Python class name of the auth provider implementation"
          },
          "auth_config_class": {
            "type": "string",
            "title": "Auth Config Class",
            "description": "Python class name that defines the authentication configuration fields"
          },
          "config_class": {
            "type": "string",
            "title": "Config Class",
            "description": "Python class name that defines the auth provider-specific configuration"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Detailed description explaining what this auth provider offers"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id",
            "description": "Organization identifier for custom auth providers. System providers have this set to null."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "auth_fields": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Fields"
              },
              {
                "type": "null"
              }
            ],
            "description": "Dynamically populated field definitions for authentication configuration. These describe what credentials are required to connect to this auth provider."
          },
          "config_fields": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Fields"
              },
              {
                "type": "null"
              }
            ],
            "description": "Dynamically populated field definitions for auth provider-specific configuration. These describe what additional configuration is required when using this auth provider to connect to a source (e.g., auth_config_id and account_id for Composio)."
          }
        },
        "type": "object",
        "required": [
          "name",
          "short_name",
          "class_name",
          "auth_config_class",
          "config_class",
          "id",
          "created_at",
          "modified_at"
        ],
        "title": "AuthProvider",
        "description": "Schema for auth provider response."
      },
      "AuthProviderAuthentication": {
        "properties": {
          "provider_readable_id": {
            "type": "string",
            "title": "Provider Readable Id",
            "description": "Auth provider readable ID"
          },
          "provider_config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Config",
            "description": "Provider-specific configuration"
          }
        },
        "type": "object",
        "required": [
          "provider_readable_id"
        ],
        "title": "AuthProviderAuthentication",
        "description": "Authentication via external provider."
      },
      "AuthProviderConnection": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "readable_id": {
            "type": "string",
            "title": "Readable Id",
            "description": "URL-safe unique identifier that can be used to reference this connection when setting up source connections.",
            "examples": [
              "composio-connection-ab123",
              "oauth-github-xy789"
            ]
          },
          "short_name": {
            "type": "string",
            "title": "Short Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description of the connection"
          },
          "created_by_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Email",
            "description": "Email of the user who created this connection"
          },
          "modified_by_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified By Email",
            "description": "Email of the user who last modified this connection"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "masked_client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Masked Client Id",
            "description": "Masked client ID for OAuth providers (first 7 and last 4 characters visible)"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "readable_id",
          "short_name",
          "created_at",
          "modified_at"
        ],
        "title": "AuthProviderConnection",
        "description": "Schema for auth provider connection response."
      },
      "AuthProviderConnectionCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name",
            "description": "Human-readable name for this auth provider connection"
          },
          "readable_id": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^[a-z0-9]+(-[a-z0-9]+)*$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Readable Id",
            "description": "URL-safe unique identifier for the connection. Must contain only lowercase letters, numbers, and hyphens. If not provided, it will be automatically generated from the connection name with a random suffix for uniqueness (e.g., 'composio-connection-ab123').",
            "examples": [
              "my-composio-connection",
              "oauth-github-prod"
            ]
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Optional detailed description of what this auth provider connection provides."
          },
          "short_name": {
            "type": "string",
            "title": "Short Name",
            "description": "Technical identifier of the auth provider"
          },
          "auth_fields": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConfigValues"
              },
              {
                "type": "null"
              }
            ],
            "description": "Authentication credentials required to access the auth provider. The required fields vary by auth provider type."
          }
        },
        "type": "object",
        "required": [
          "name",
          "short_name"
        ],
        "title": "AuthProviderConnectionCreate",
        "description": "Schema for creating an auth provider connection with credentials.",
        "example": {
          "auth_fields": {
            "api_key": "comp_1234567890abcdef"
          },
          "description": "My Composio Connection",
          "name": "My Composio Connection",
          "short_name": "composio"
        }
      },
      "AuthProviderConnectionUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Human-readable name for this auth provider connection"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Optional detailed description of what this auth provider connection provides."
          },
          "auth_fields": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConfigValues"
              },
              {
                "type": "null"
              }
            ],
            "description": "Updated authentication credentials for the auth provider. The required fields vary by auth provider type. If provided, all existing credentials will be replaced."
          }
        },
        "type": "object",
        "title": "AuthProviderConnectionUpdate",
        "description": "Schema for updating an auth provider connection.",
        "example": {
          "auth_fields": {
            "api_key": "comp_new_api_key_1234"
          },
          "description": "Updated description",
          "name": "Updated Composio Connection"
        }
      },
      "AuthenticationDetails": {
        "properties": {
          "method": {
            "$ref": "#/components/schemas/AuthenticationMethod"
          },
          "authenticated": {
            "type": "boolean",
            "title": "Authenticated"
          },
          "authenticated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Authenticated At"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "auth_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth Url",
            "description": "For pending OAuth flows"
          },
          "auth_url_expires": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth Url Expires"
          },
          "redirect_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Redirect Url"
          },
          "provider_readable_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Readable Id"
          },
          "provider_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Id"
          }
        },
        "type": "object",
        "required": [
          "method",
          "authenticated"
        ],
        "title": "AuthenticationDetails",
        "description": "Authentication information."
      },
      "AuthenticationMethod": {
        "type": "string",
        "enum": [
          "direct",
          "oauth_browser",
          "oauth_token",
          "oauth_byoc",
          "auth_provider"
        ],
        "title": "AuthenticationMethod",
        "description": "Authentication methods for source connections."
      },
      "BillingPeriodUsage": {
        "properties": {
          "period_id": {
            "type": "string",
            "format": "uuid",
            "title": "Period Id",
            "description": "Billing period ID"
          },
          "period_start": {
            "type": "string",
            "format": "date-time",
            "title": "Period Start",
            "description": "Period start date"
          },
          "period_end": {
            "type": "string",
            "format": "date-time",
            "title": "Period End",
            "description": "Period end date"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Period status (active, trial, ended, etc)"
          },
          "plan": {
            "type": "string",
            "title": "Plan",
            "description": "Subscription plan for this period"
          },
          "usage": {
            "$ref": "#/components/schemas/UsageSnapshot",
            "description": "Current usage snapshot"
          },
          "daily_usage": {
            "items": {
              "$ref": "#/components/schemas/UsageSnapshot"
            },
            "type": "array",
            "maxItems": 30,
            "title": "Daily Usage",
            "description": "Daily snapshots for trend visualization"
          },
          "days_remaining": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Days Remaining",
            "description": "Days left in period"
          },
          "is_current": {
            "type": "boolean",
            "title": "Is Current",
            "description": "Whether this is the current period",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "period_id",
          "period_start",
          "period_end",
          "status",
          "plan",
          "usage"
        ],
        "title": "BillingPeriodUsage",
        "description": "Complete usage data for a billing period."
      },
      "Body_connect_slack_with_token_connections_direct_token_slack_post": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "token"
        ],
        "title": "Body_connect_slack_with_token_connections_direct_token_slack_post"
      },
      "CheckoutSessionRequest": {
        "properties": {
          "plan": {
            "type": "string",
            "title": "Plan",
            "description": "Plan to subscribe to (developer, startup)"
          },
          "success_url": {
            "type": "string",
            "title": "Success Url",
            "description": "URL to redirect on successful payment"
          },
          "cancel_url": {
            "type": "string",
            "title": "Cancel Url",
            "description": "URL to redirect on cancellation"
          }
        },
        "type": "object",
        "required": [
          "plan",
          "success_url",
          "cancel_url"
        ],
        "title": "CheckoutSessionRequest",
        "description": "Request to create a checkout session."
      },
      "CheckoutSessionResponse": {
        "properties": {
          "checkout_url": {
            "type": "string",
            "title": "Checkout Url",
            "description": "Stripe checkout URL"
          }
        },
        "type": "object",
        "required": [
          "checkout_url"
        ],
        "title": "CheckoutSessionResponse",
        "description": "Response with checkout session URL."
      },
      "Collection": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Human-readable display name for the collection."
          },
          "readable_id": {
            "type": "string",
            "title": "Readable Id",
            "description": "URL-safe unique identifier used in API endpoints. This becomes non-optional once the collection is created."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Unique system identifier for the collection. This UUID is generated automatically and used for internal references."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Timestamp when the collection was created (ISO 8601 format)."
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At",
            "description": "Timestamp when the collection was last modified (ISO 8601 format)."
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id",
            "description": "Identifier of the organization that owns this collection. Collections are isolated per organization."
          },
          "created_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Email",
            "description": "Email address of the user who created this collection."
          },
          "modified_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified By Email",
            "description": "Email address of the user who last modified this collection."
          },
          "status": {
            "$ref": "#/components/schemas/CollectionStatus",
            "description": "Current operational status of the collection:<br/>\u2022 **NEEDS_SOURCE**: Collection has no authenticated connections, or connections exist but haven't synced yet<br/>\u2022 **ACTIVE**: At least one connection has completed a sync or is currently syncing<br/>\u2022 **ERROR**: All connections have failed their last sync",
            "default": "NEEDS SOURCE"
          }
        },
        "type": "object",
        "required": [
          "name",
          "readable_id",
          "id",
          "created_at",
          "modified_at",
          "organization_id"
        ],
        "title": "Collection",
        "description": "Complete collection representation returned by the API.\n\nThis schema includes all collection metadata plus computed status information\nbased on the health and state of associated source connections.",
        "examples": [
          {
            "created_at": "2024-01-15T09:30:00Z",
            "created_by_email": "admin@company.com",
            "id": "550e8400-e29b-41d4-a716-446655440000",
            "modified_at": "2024-01-15T14:22:15Z",
            "modified_by_email": "finance@company.com",
            "name": "Finance Data",
            "organization_id": "org12345-6789-abcd-ef01-234567890abc",
            "readable_id": "finance-data-ab123",
            "status": "ACTIVE"
          }
        ]
      },
      "CollectionCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 64,
            "minLength": 4,
            "title": "Name",
            "description": "Human-readable display name for the collection. This appears in the UI and should clearly describe the data contained within (e.g., 'Finance Data').",
            "examples": [
              "Finance Data",
              "Customer Support",
              "Marketing Analytics"
            ]
          },
          "readable_id": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^[a-z0-9]+(-[a-z0-9]+)*$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Readable Id",
            "description": "URL-safe unique identifier used in API endpoints. Must contain only lowercase letters, numbers, and hyphens. If not provided, it will be automatically generated from the collection name with a random suffix for uniqueness (e.g., 'finance-data-ab123').",
            "examples": [
              "finance-data-ab123",
              "customer-support-xy789",
              "marketing-analytics-cd456"
            ]
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "CollectionCreate",
        "description": "Schema for creating a new collection.\n\nCollections serve as logical containers for organizing related data sources.\nOnce created, you can add source connections to populate the collection with data\nfrom various sources like databases, APIs, and file systems.",
        "examples": [
          {
            "name": "Finance Data",
            "readable_id": "finance-data-reports"
          },
          {
            "name": "Customer Support"
          }
        ]
      },
      "CollectionStatus": {
        "type": "string",
        "enum": [
          "ACTIVE",
          "NEEDS SOURCE",
          "ERROR"
        ],
        "title": "CollectionStatus",
        "description": "Collection status enum."
      },
      "CollectionUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 64,
                "minLength": 4
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Updated display name for the collection. Must be between 4 and 64 characters."
          }
        },
        "type": "object",
        "title": "CollectionUpdate",
        "description": "Schema for updating an existing collection.\n\nOnly the collection's display name can be updated. The readable_id is immutable\nto maintain stable API endpoints and references.",
        "examples": [
          {
            "name": "Updated Finance Data"
          },
          {
            "name": "Marketing Analytics - Q1 2024"
          },
          {
            "name": "Customer Support Archive"
          }
        ]
      },
      "ConfigField": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "required": {
            "type": "boolean",
            "title": "Required",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "name",
          "title",
          "type"
        ],
        "title": "ConfigField",
        "description": "Config field model."
      },
      "ConfigValues": {
        "properties": {},
        "additionalProperties": true,
        "type": "object",
        "title": "ConfigValues",
        "description": "Config values model.\n\nImplements \"flat dictionary\" semantics, where no values are dictionaries."
      },
      "Connection": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "title": "Name",
            "description": "Human-readable display name for the connection."
          },
          "readable_id": {
            "type": "string",
            "title": "Readable Id",
            "description": "URL-safe unique identifier used in API endpoints. This becomes non-optional once the connection is created."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "integration_type": {
            "$ref": "#/components/schemas/IntegrationType"
          },
          "integration_credential_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Integration Credential Id"
          },
          "status": {
            "$ref": "#/components/schemas/ConnectionStatus"
          },
          "short_name": {
            "type": "string",
            "title": "Short Name"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Unique system identifier for the connection."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Timestamp when the connection was created (ISO 8601 format)."
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At",
            "description": "Timestamp when the connection was last modified (ISO 8601 format)."
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "created_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Email"
          },
          "modified_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified By Email"
          }
        },
        "type": "object",
        "required": [
          "name",
          "readable_id",
          "integration_type",
          "status",
          "short_name",
          "id",
          "created_at",
          "modified_at"
        ],
        "title": "Connection",
        "description": "Schema for connection with config fields."
      },
      "ConnectionStatus": {
        "type": "string",
        "enum": [
          "active",
          "inactive",
          "error"
        ],
        "title": "ConnectionStatus",
        "description": "Connection status enum."
      },
      "CustomerPortalRequest": {
        "properties": {
          "return_url": {
            "type": "string",
            "title": "Return Url",
            "description": "URL to return to after portal session"
          }
        },
        "type": "object",
        "required": [
          "return_url"
        ],
        "title": "CustomerPortalRequest",
        "description": "Request to create customer portal session."
      },
      "CustomerPortalResponse": {
        "properties": {
          "portal_url": {
            "type": "string",
            "title": "Portal Url",
            "description": "Stripe customer portal URL"
          }
        },
        "type": "object",
        "required": [
          "portal_url"
        ],
        "title": "CustomerPortalResponse",
        "description": "Response with customer portal URL."
      },
      "DagEdge": {
        "properties": {
          "from_node_id": {
            "type": "string",
            "format": "uuid",
            "title": "From Node Id"
          },
          "to_node_id": {
            "type": "string",
            "format": "uuid",
            "title": "To Node Id"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "dag_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dag Id"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "created_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Email"
          },
          "modified_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified By Email"
          }
        },
        "type": "object",
        "required": [
          "from_node_id",
          "to_node_id",
          "id",
          "dag_id",
          "organization_id"
        ],
        "title": "DagEdge",
        "description": "Schema for a DAG edge."
      },
      "DagEdgeCreate": {
        "properties": {
          "from_node_id": {
            "type": "string",
            "format": "uuid",
            "title": "From Node Id"
          },
          "to_node_id": {
            "type": "string",
            "format": "uuid",
            "title": "To Node Id"
          }
        },
        "type": "object",
        "required": [
          "from_node_id",
          "to_node_id"
        ],
        "title": "DagEdgeCreate",
        "description": "Schema for creating a DAG edge."
      },
      "DagNode": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/NodeType"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config"
          },
          "connection_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connection Id"
          },
          "entity_definition_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity Definition Id"
          },
          "transformer_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transformer Id"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "dag_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dag Id"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "created_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Email"
          },
          "modified_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified By Email"
          }
        },
        "type": "object",
        "required": [
          "type",
          "name",
          "id",
          "dag_id",
          "organization_id"
        ],
        "title": "DagNode",
        "description": "Schema for a DAG node."
      },
      "DagNodeCreate": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/NodeType"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config"
          },
          "connection_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connection Id"
          },
          "entity_definition_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity Definition Id"
          },
          "transformer_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transformer Id"
          },
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id",
            "description": "Optional pre-set ID for the node"
          }
        },
        "type": "object",
        "required": [
          "type",
          "name"
        ],
        "title": "DagNodeCreate",
        "description": "Schema for creating a DAG node."
      },
      "DatetimeRange": {
        "properties": {
          "lt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lt",
            "description": "point.key &lt; range.lt"
          },
          "gt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gt",
            "description": "point.key &gt; range.gt"
          },
          "gte": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gte",
            "description": "point.key &gt;= range.gte"
          },
          "lte": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lte",
            "description": "point.key &lt;= range.lte"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "DatetimeRange",
        "description": "Range filter request"
      },
      "Destination": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "short_name": {
            "type": "string",
            "title": "Short Name"
          },
          "class_name": {
            "type": "string",
            "title": "Class Name"
          },
          "auth_config_class": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth Config Class"
          },
          "input_entity_definition_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Entity Definition Ids"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "config_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config Schema"
          },
          "labels": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "short_name",
          "class_name",
          "id",
          "created_at",
          "modified_at"
        ],
        "title": "Destination",
        "description": "Schema for Destination."
      },
      "DestinationWithAuthenticationFields": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "short_name": {
            "type": "string",
            "title": "Short Name"
          },
          "class_name": {
            "type": "string",
            "title": "Class Name"
          },
          "auth_config_class": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth Config Class"
          },
          "input_entity_definition_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Entity Definition Ids"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "config_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config Schema"
          },
          "labels": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "auth_fields": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Fields"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "short_name",
          "class_name",
          "id",
          "created_at",
          "modified_at"
        ],
        "title": "DestinationWithAuthenticationFields",
        "description": "Schema for Destination with auth config."
      },
      "DirectAuthentication": {
        "properties": {
          "credentials": {
            "additionalProperties": true,
            "type": "object",
            "title": "Credentials",
            "description": "Authentication credentials"
          }
        },
        "type": "object",
        "required": [
          "credentials"
        ],
        "title": "DirectAuthentication",
        "description": "Direct authentication with API keys or passwords."
      },
      "EmbeddingModel": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "short_name": {
            "type": "string",
            "title": "Short Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "provider": {
            "type": "string",
            "title": "Provider"
          },
          "model_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Name"
          },
          "model_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Version"
          },
          "auth_config_class": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth Config Class"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "short_name",
          "provider",
          "id",
          "created_at",
          "modified_at"
        ],
        "title": "EmbeddingModel",
        "description": "Schema for EmbeddingModel."
      },
      "EmbeddingModelWithAuthenticationFields": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "short_name": {
            "type": "string",
            "title": "Short Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "provider": {
            "type": "string",
            "title": "Provider"
          },
          "model_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Name"
          },
          "model_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Version"
          },
          "auth_config_class": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth Config Class"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "auth_fields": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Fields"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "short_name",
          "provider",
          "id",
          "created_at",
          "modified_at"
        ],
        "title": "EmbeddingModelWithAuthenticationFields",
        "description": "Schema for EmbeddingModel with auth config."
      },
      "EntityCount": {
        "properties": {
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "count"
        ],
        "title": "EntityCount",
        "description": "Schema for entity count."
      },
      "EntityCountWithDefinition": {
        "properties": {
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "entity_definition_id": {
            "type": "string",
            "format": "uuid",
            "title": "Entity Definition Id"
          },
          "entity_definition_name": {
            "type": "string",
            "title": "Entity Definition Name"
          },
          "entity_definition_type": {
            "type": "string",
            "title": "Entity Definition Type"
          },
          "entity_definition_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity Definition Description"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          }
        },
        "type": "object",
        "required": [
          "count",
          "entity_definition_id",
          "entity_definition_name",
          "entity_definition_type",
          "modified_at"
        ],
        "title": "EntityCountWithDefinition",
        "description": "Entity count with entity definition details."
      },
      "EntityDefinition": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "type": {
            "$ref": "#/components/schemas/EntityType"
          },
          "entity_schema": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "additionalProperties": true,
                "type": "object"
              }
            ],
            "title": "Entity Schema"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "module_name": {
            "type": "string",
            "title": "Module Name"
          },
          "class_name": {
            "type": "string",
            "title": "Class Name"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "type",
          "entity_schema",
          "module_name",
          "class_name",
          "id"
        ],
        "title": "EntityDefinition",
        "description": "Schema for an entity definition."
      },
      "EntityDefinitionCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "type": {
            "$ref": "#/components/schemas/EntityType"
          },
          "entity_schema": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "additionalProperties": true,
                "type": "object"
              }
            ],
            "title": "Entity Schema"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "module_name": {
            "type": "string",
            "title": "Module Name"
          },
          "class_name": {
            "type": "string",
            "title": "Class Name"
          }
        },
        "type": "object",
        "required": [
          "name",
          "type",
          "entity_schema",
          "module_name",
          "class_name"
        ],
        "title": "EntityDefinitionCreate",
        "description": "Schema for creating an entity definition."
      },
      "EntitySummary": {
        "properties": {
          "total_entities": {
            "type": "integer",
            "title": "Total Entities",
            "default": 0
          },
          "by_type": {
            "additionalProperties": {
              "$ref": "#/components/schemas/EntityTypeStats"
            },
            "type": "object",
            "title": "By Type"
          }
        },
        "type": "object",
        "title": "EntitySummary",
        "description": "Entity state summary."
      },
      "EntityType": {
        "type": "string",
        "enum": [
          "file",
          "json"
        ],
        "title": "EntityType",
        "description": "Type of entity."
      },
      "EntityTypeStats": {
        "properties": {
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "last_updated": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Updated"
          }
        },
        "type": "object",
        "required": [
          "count"
        ],
        "title": "EntityTypeStats",
        "description": "Statistics for a specific entity type."
      },
      "FieldCondition": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key",
            "description": "Payload key"
          },
          "match": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MatchValue"
              },
              {
                "$ref": "#/components/schemas/MatchText"
              },
              {
                "$ref": "#/components/schemas/MatchPhrase"
              },
              {
                "$ref": "#/components/schemas/MatchAny"
              },
              {
                "$ref": "#/components/schemas/MatchExcept"
              },
              {
                "type": "null"
              }
            ],
            "title": "Match",
            "description": "Check if point has field with a given value"
          },
          "range": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Range"
              },
              {
                "$ref": "#/components/schemas/DatetimeRange"
              },
              {
                "type": "null"
              }
            ],
            "title": "Range",
            "description": "Check if points value lies in a given range"
          },
          "geo_bounding_box": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GeoBoundingBox"
              },
              {
                "type": "null"
              }
            ],
            "description": "Check if points geolocation lies in a given area"
          },
          "geo_radius": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GeoRadius"
              },
              {
                "type": "null"
              }
            ],
            "description": "Check if geo point is within a given radius"
          },
          "geo_polygon": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GeoPolygon"
              },
              {
                "type": "null"
              }
            ],
            "description": "Check if geo point is within a given polygon"
          },
          "values_count": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ValuesCount"
              },
              {
                "type": "null"
              }
            ],
            "description": "Check number of values of the field"
          },
          "is_empty": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Empty",
            "description": "Check that the field is empty, alternative syntax for `is_empty: 'field_name'`"
          },
          "is_null": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Null",
            "description": "Check that the field is null, alternative syntax for `is_null: 'field_name'`"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "key"
        ],
        "title": "FieldCondition",
        "description": "All possible payload filtering conditions"
      },
      "Fields": {
        "properties": {
          "fields": {
            "items": {
              "$ref": "#/components/schemas/ConfigField"
            },
            "type": "array",
            "title": "Fields"
          }
        },
        "type": "object",
        "required": [
          "fields"
        ],
        "title": "Fields",
        "description": "Fields model."
      },
      "Filter": {
        "properties": {
          "should": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/FieldCondition"
                    },
                    {
                      "$ref": "#/components/schemas/IsEmptyCondition"
                    },
                    {
                      "$ref": "#/components/schemas/IsNullCondition"
                    },
                    {
                      "$ref": "#/components/schemas/HasIdCondition"
                    },
                    {
                      "$ref": "#/components/schemas/HasVectorCondition"
                    },
                    {
                      "$ref": "#/components/schemas/NestedCondition"
                    },
                    {
                      "$ref": "#/components/schemas/Filter"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "$ref": "#/components/schemas/FieldCondition"
              },
              {
                "$ref": "#/components/schemas/IsEmptyCondition"
              },
              {
                "$ref": "#/components/schemas/IsNullCondition"
              },
              {
                "$ref": "#/components/schemas/HasIdCondition"
              },
              {
                "$ref": "#/components/schemas/HasVectorCondition"
              },
              {
                "$ref": "#/components/schemas/NestedCondition"
              },
              {
                "$ref": "#/components/schemas/Filter"
              },
              {
                "type": "null"
              }
            ],
            "title": "Should",
            "description": "At least one of those conditions should match"
          },
          "min_should": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MinShould"
              },
              {
                "type": "null"
              }
            ],
            "description": "At least minimum amount of given conditions should match"
          },
          "must": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/FieldCondition"
                    },
                    {
                      "$ref": "#/components/schemas/IsEmptyCondition"
                    },
                    {
                      "$ref": "#/components/schemas/IsNullCondition"
                    },
                    {
                      "$ref": "#/components/schemas/HasIdCondition"
                    },
                    {
                      "$ref": "#/components/schemas/HasVectorCondition"
                    },
                    {
                      "$ref": "#/components/schemas/NestedCondition"
                    },
                    {
                      "$ref": "#/components/schemas/Filter"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "$ref": "#/components/schemas/FieldCondition"
              },
              {
                "$ref": "#/components/schemas/IsEmptyCondition"
              },
              {
                "$ref": "#/components/schemas/IsNullCondition"
              },
              {
                "$ref": "#/components/schemas/HasIdCondition"
              },
              {
                "$ref": "#/components/schemas/HasVectorCondition"
              },
              {
                "$ref": "#/components/schemas/NestedCondition"
              },
              {
                "$ref": "#/components/schemas/Filter"
              },
              {
                "type": "null"
              }
            ],
            "title": "Must",
            "description": "All conditions must match"
          },
          "must_not": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/FieldCondition"
                    },
                    {
                      "$ref": "#/components/schemas/IsEmptyCondition"
                    },
                    {
                      "$ref": "#/components/schemas/IsNullCondition"
                    },
                    {
                      "$ref": "#/components/schemas/HasIdCondition"
                    },
                    {
                      "$ref": "#/components/schemas/HasVectorCondition"
                    },
                    {
                      "$ref": "#/components/schemas/NestedCondition"
                    },
                    {
                      "$ref": "#/components/schemas/Filter"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "$ref": "#/components/schemas/FieldCondition"
              },
              {
                "$ref": "#/components/schemas/IsEmptyCondition"
              },
              {
                "$ref": "#/components/schemas/IsNullCondition"
              },
              {
                "$ref": "#/components/schemas/HasIdCondition"
              },
              {
                "$ref": "#/components/schemas/HasVectorCondition"
              },
              {
                "$ref": "#/components/schemas/NestedCondition"
              },
              {
                "$ref": "#/components/schemas/Filter"
              },
              {
                "type": "null"
              }
            ],
            "title": "Must Not",
            "description": "All conditions must NOT match"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "Filter"
      },
      "GeoBoundingBox": {
        "properties": {
          "top_left": {
            "$ref": "#/components/schemas/GeoPoint",
            "description": "Geo filter request  Matches coordinates inside the rectangle, described by coordinates of lop-left and bottom-right edges"
          },
          "bottom_right": {
            "$ref": "#/components/schemas/GeoPoint",
            "description": "Geo filter request  Matches coordinates inside the rectangle, described by coordinates of lop-left and bottom-right edges"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "top_left",
          "bottom_right"
        ],
        "title": "GeoBoundingBox",
        "description": "Geo filter request  Matches coordinates inside the rectangle, described by coordinates of lop-left and bottom-right edges"
      },
      "GeoLineString": {
        "properties": {
          "points": {
            "items": {
              "$ref": "#/components/schemas/GeoPoint"
            },
            "type": "array",
            "title": "Points",
            "description": "Ordered sequence of GeoPoints representing the line"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "points"
        ],
        "title": "GeoLineString",
        "description": "Ordered sequence of GeoPoints representing the line"
      },
      "GeoPoint": {
        "properties": {
          "lon": {
            "type": "number",
            "title": "Lon",
            "description": "Geo point payload schema"
          },
          "lat": {
            "type": "number",
            "title": "Lat",
            "description": "Geo point payload schema"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "lon",
          "lat"
        ],
        "title": "GeoPoint",
        "description": "Geo point payload schema"
      },
      "GeoPolygon": {
        "properties": {
          "exterior": {
            "$ref": "#/components/schemas/GeoLineString",
            "description": "Geo filter request  Matches coordinates inside the polygon, defined by `exterior` and `interiors`"
          },
          "interiors": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/GeoLineString"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interiors",
            "description": "Interior lines (if present) bound holes within the surface each GeoLineString must consist of a minimum of 4 points, and the first and last points must be the same."
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "exterior"
        ],
        "title": "GeoPolygon",
        "description": "Geo filter request  Matches coordinates inside the polygon, defined by `exterior` and `interiors`"
      },
      "GeoRadius": {
        "properties": {
          "center": {
            "$ref": "#/components/schemas/GeoPoint",
            "description": "Geo filter request  Matches coordinates inside the circle of `radius` and center with coordinates `center`"
          },
          "radius": {
            "type": "number",
            "title": "Radius",
            "description": "Radius of the area in meters"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "center",
          "radius"
        ],
        "title": "GeoRadius",
        "description": "Geo filter request  Matches coordinates inside the circle of `radius` and center with coordinates `center`"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HasIdCondition": {
        "properties": {
          "has_id": {
            "items": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                }
              ]
            },
            "type": "array",
            "title": "Has Id",
            "description": "ID-based filtering condition"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "has_id"
        ],
        "title": "HasIdCondition",
        "description": "ID-based filtering condition"
      },
      "HasVectorCondition": {
        "properties": {
          "has_vector": {
            "type": "string",
            "title": "Has Vector",
            "description": "Filter points which have specific vector assigned"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "has_vector"
        ],
        "title": "HasVectorCondition",
        "description": "Filter points which have specific vector assigned"
      },
      "IntegrationCredentialInDB": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "integration_short_name": {
            "type": "string",
            "title": "Integration Short Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "integration_type": {
            "$ref": "#/components/schemas/IntegrationType"
          },
          "authentication_method": {
            "$ref": "#/components/schemas/AuthenticationMethod"
          },
          "oauth_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OAuthType"
              },
              {
                "type": "null"
              }
            ]
          },
          "auth_config_class": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth Config Class"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "encrypted_credentials": {
            "type": "string",
            "title": "Encrypted Credentials"
          }
        },
        "type": "object",
        "required": [
          "name",
          "integration_short_name",
          "integration_type",
          "authentication_method",
          "id",
          "organization_id",
          "encrypted_credentials"
        ],
        "title": "IntegrationCredentialInDB",
        "description": "Integration credential in DB without decrypted data."
      },
      "IntegrationCredentialRawCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "integration_short_name": {
            "type": "string",
            "title": "Integration Short Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "integration_type": {
            "$ref": "#/components/schemas/IntegrationType"
          },
          "authentication_method": {
            "$ref": "#/components/schemas/AuthenticationMethod"
          },
          "oauth_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OAuthType"
              },
              {
                "type": "null"
              }
            ]
          },
          "auth_config_class": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth Config Class"
          },
          "auth_fields": {
            "additionalProperties": true,
            "type": "object",
            "title": "Auth Fields"
          }
        },
        "type": "object",
        "required": [
          "name",
          "integration_short_name",
          "integration_type",
          "authentication_method",
          "auth_fields"
        ],
        "title": "IntegrationCredentialRawCreate",
        "description": "Create class for integration credentials with raw auth fields.\n\nThis schema is used when auth fields need to be validated and encrypted\nbefore creating the credential."
      },
      "IntegrationType": {
        "type": "string",
        "enum": [
          "source",
          "destination",
          "embedding_model",
          "auth_provider"
        ],
        "title": "IntegrationType",
        "description": "Integration type enum."
      },
      "InvitationCreate": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "role": {
            "type": "string",
            "title": "Role",
            "default": "member"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "InvitationCreate",
        "description": "Schema for creating an invitation."
      },
      "InvitationResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "role": {
            "type": "string",
            "title": "Role"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "invited_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invited At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "email",
          "role",
          "status"
        ],
        "title": "InvitationResponse",
        "description": "Schema for invitation responses."
      },
      "IsEmptyCondition": {
        "properties": {
          "is_empty": {
            "$ref": "#/components/schemas/PayloadField",
            "description": "Select points with empty payload for a specified field"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "is_empty"
        ],
        "title": "IsEmptyCondition",
        "description": "Select points with empty payload for a specified field"
      },
      "IsNullCondition": {
        "properties": {
          "is_null": {
            "$ref": "#/components/schemas/PayloadField",
            "description": "Select points with null payload for a specified field"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "is_null"
        ],
        "title": "IsNullCondition",
        "description": "Select points with null payload for a specified field"
      },
      "LegacySearchRequest": {
        "properties": {
          "query": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 1,
            "title": "Query",
            "description": "The search query text"
          },
          "filter": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Filter"
              },
              {
                "type": "null"
              }
            ],
            "description": "Qdrant native filter for metadata-based filtering"
          },
          "offset": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Offset",
            "description": "Number of results to skip",
            "default": 0
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 1000.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Limit",
            "description": "Maximum number of results",
            "default": 100
          },
          "score_threshold": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Score Threshold",
            "description": "Minimum similarity score threshold (deprecated, will be ignored)"
          },
          "response_type": {
            "$ref": "#/components/schemas/ResponseType",
            "description": "Type of response - 'raw' or 'completion'",
            "default": "raw"
          },
          "search_method": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "hybrid",
                  "neural",
                  "keyword"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Search Method",
            "description": "Search method to use"
          },
          "recency_bias": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Recency Bias",
            "description": "How much document age affects the similarity score (0..1)"
          },
          "expansion_strategy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/QueryExpansionStrategy"
              },
              {
                "type": "null"
              }
            ],
            "description": "Query expansion strategy"
          },
          "enable_reranking": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enable Reranking",
            "description": "Enable LLM-based reranking to improve result relevance"
          },
          "enable_query_interpretation": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enable Query Interpretation",
            "description": "Enable automatic filter extraction from natural language query"
          }
        },
        "type": "object",
        "required": [
          "query"
        ],
        "title": "LegacySearchRequest",
        "description": "Legacy search request schema for backwards compatibility."
      },
      "LegacySearchResponse": {
        "properties": {
          "results": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Results",
            "description": "Array of search result objects"
          },
          "response_type": {
            "$ref": "#/components/schemas/ResponseType",
            "description": "Indicates whether results are raw search matches or AI-generated completions"
          },
          "completion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion",
            "description": "AI-generated natural language answer when response_type is 'completion'"
          },
          "status": {
            "$ref": "#/components/schemas/SearchStatus",
            "description": "Status of the search operation"
          }
        },
        "type": "object",
        "required": [
          "results",
          "response_type",
          "status"
        ],
        "title": "LegacySearchResponse",
        "description": "Legacy search response schema for backwards compatibility."
      },
      "MatchAny": {
        "properties": {
          "any": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              }
            ],
            "title": "Any",
            "description": "Exact match on any of the given values"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "any"
        ],
        "title": "MatchAny",
        "description": "Exact match on any of the given values"
      },
      "MatchExcept": {
        "properties": {
          "except": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              }
            ],
            "title": "Except",
            "description": "Should have at least one value not matching the any given values"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "except"
        ],
        "title": "MatchExcept",
        "description": "Should have at least one value not matching the any given values"
      },
      "MatchPhrase": {
        "properties": {
          "phrase": {
            "type": "string",
            "title": "Phrase",
            "description": "Full-text phrase match of the string."
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "phrase"
        ],
        "title": "MatchPhrase",
        "description": "Full-text phrase match of the string."
      },
      "MatchText": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "Full-text match of the strings."
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "text"
        ],
        "title": "MatchText",
        "description": "Full-text match of the strings."
      },
      "MatchValue": {
        "properties": {
          "value": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "title": "Value",
            "description": "Exact match of the given value"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "value"
        ],
        "title": "MatchValue",
        "description": "Exact match of the given value"
      },
      "MemberResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "role": {
            "type": "string",
            "title": "Role"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "default": "active"
          },
          "is_primary": {
            "type": "boolean",
            "title": "Is Primary",
            "default": false
          },
          "auth0_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth0 Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "email",
          "name",
          "role"
        ],
        "title": "MemberResponse",
        "description": "Schema for organization member responses."
      },
      "MessageResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Response message"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "MessageResponse",
        "description": "Generic message response."
      },
      "MinShould": {
        "properties": {
          "conditions": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/FieldCondition"
                },
                {
                  "$ref": "#/components/schemas/IsEmptyCondition"
                },
                {
                  "$ref": "#/components/schemas/IsNullCondition"
                },
                {
                  "$ref": "#/components/schemas/HasIdCondition"
                },
                {
                  "$ref": "#/components/schemas/HasVectorCondition"
                },
                {
                  "$ref": "#/components/schemas/NestedCondition"
                },
                {
                  "$ref": "#/components/schemas/Filter"
                }
              ]
            },
            "type": "array",
            "title": "Conditions",
            "description": ""
          },
          "min_count": {
            "type": "integer",
            "title": "Min Count",
            "description": ""
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "conditions",
          "min_count"
        ],
        "title": "MinShould"
      },
      "MinuteLevelScheduleConfig": {
        "properties": {
          "cron_expression": {
            "type": "string",
            "title": "Cron Expression",
            "description": "Minute-level cron expression for incremental sync (default: every minute)",
            "default": "*/1 * * * *"
          }
        },
        "type": "object",
        "title": "MinuteLevelScheduleConfig",
        "description": "Configuration for minute-level incremental sync schedules."
      },
      "Nested": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key",
            "description": "Select points with payload for a specified nested field"
          },
          "filter": {
            "$ref": "#/components/schemas/Filter",
            "description": "Select points with payload for a specified nested field"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "key",
          "filter"
        ],
        "title": "Nested",
        "description": "Select points with payload for a specified nested field"
      },
      "NestedCondition": {
        "properties": {
          "nested": {
            "$ref": "#/components/schemas/Nested",
            "description": ""
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "nested"
        ],
        "title": "NestedCondition"
      },
      "NodeType": {
        "type": "string",
        "enum": [
          "source",
          "destination",
          "transformer",
          "entity"
        ],
        "title": "NodeType",
        "description": "Type of node."
      },
      "OAuthBrowserAuthentication": {
        "properties": {
          "redirect_uri": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Redirect Uri",
            "description": "OAuth redirect URI"
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id",
            "description": "OAuth2 client ID (for custom apps)"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Secret",
            "description": "OAuth2 client secret (for custom apps)"
          },
          "consumer_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Consumer Key",
            "description": "OAuth1 consumer key (for custom apps)"
          },
          "consumer_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Consumer Secret",
            "description": "OAuth1 consumer secret (for custom apps)"
          }
        },
        "type": "object",
        "title": "OAuthBrowserAuthentication",
        "description": "OAuth authentication via browser flow.\n\nSupports both OAuth2 and OAuth1 BYOC (Bring Your Own Client):\n- OAuth2 BYOC: Provide client_id + client_secret\n- OAuth1 BYOC: Provide consumer_key + consumer_secret"
      },
      "OAuthTokenAuthentication": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token",
            "description": "OAuth access token"
          },
          "refresh_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refresh Token",
            "description": "OAuth refresh token"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At",
            "description": "Token expiry time"
          }
        },
        "type": "object",
        "required": [
          "access_token"
        ],
        "title": "OAuthTokenAuthentication",
        "description": "OAuth authentication with pre-obtained token."
      },
      "OAuthType": {
        "type": "string",
        "enum": [
          "oauth1",
          "access_only",
          "with_refresh",
          "with_rotating_refresh"
        ],
        "title": "OAuthType",
        "description": "OAuth token types for sources."
      },
      "Organization": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "auth0_org_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth0 Org Id"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "org_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Metadata"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "created_at",
          "modified_at"
        ],
        "title": "Organization",
        "description": "Organization schema."
      },
      "OrganizationCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 4,
            "title": "Name",
            "description": "Organization name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Organization description"
          },
          "auth0_org_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth0 Org Id",
            "description": "Auth0 organization ID"
          },
          "org_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Metadata",
            "description": "Additional organization metadata"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "OrganizationCreate",
        "description": "Organization creation schema."
      },
      "OrganizationMetrics": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Organization ID"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Organization name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Organization description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "When organization was created"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At",
            "description": "Last modification time"
          },
          "auth0_org_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth0 Org Id",
            "description": "Auth0 organization ID"
          },
          "billing_plan": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Billing Plan",
            "description": "Current billing plan (trial, starter, pro, enterprise)"
          },
          "billing_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Billing Status",
            "description": "Billing status (active, cancelled, past_due, etc.)"
          },
          "stripe_customer_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stripe Customer Id",
            "description": "Stripe customer ID"
          },
          "trial_ends_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trial Ends At",
            "description": "When trial ends"
          },
          "user_count": {
            "type": "integer",
            "title": "User Count",
            "description": "Number of users in organization",
            "default": 0
          },
          "source_connection_count": {
            "type": "integer",
            "title": "Source Connection Count",
            "description": "Number of source connections (from Usage.source_connections)",
            "default": 0
          },
          "entity_count": {
            "type": "integer",
            "title": "Entity Count",
            "description": "Total number of entities (from Usage.entities)",
            "default": 0
          },
          "query_count": {
            "type": "integer",
            "title": "Query Count",
            "description": "Total number of queries (from Usage.queries)",
            "default": 0
          },
          "is_member": {
            "type": "boolean",
            "title": "Is Member",
            "description": "Whether the current admin user is already a member",
            "default": false
          },
          "member_role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Member Role",
            "description": "Admin's role in this organization (if member)"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "created_at",
          "modified_at"
        ],
        "title": "OrganizationMetrics",
        "description": "Comprehensive organization metrics for admin dashboard.\n\nCombines organization info with billing and usage metrics from the Usage model."
      },
      "OrganizationWithRole": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "role": {
            "type": "string",
            "title": "Role"
          },
          "is_primary": {
            "type": "boolean",
            "title": "Is Primary"
          },
          "auth0_org_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth0 Org Id"
          },
          "org_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Metadata"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "created_at",
          "modified_at",
          "role",
          "is_primary"
        ],
        "title": "OrganizationWithRole",
        "description": "Organization schema with user's role information."
      },
      "PayloadField": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key",
            "description": "Payload field name"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "key"
        ],
        "title": "PayloadField",
        "description": "Payload field"
      },
      "QueryExpansionStrategy": {
        "type": "string",
        "enum": [
          "auto",
          "llm",
          "no_expansion"
        ],
        "title": "QueryExpansionStrategy",
        "description": "Query expansion strategies for search."
      },
      "Range": {
        "properties": {
          "lt": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lt",
            "description": "point.key &lt; range.lt"
          },
          "gt": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gt",
            "description": "point.key &gt; range.gt"
          },
          "gte": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gte",
            "description": "point.key &gt;= range.gte"
          },
          "lte": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lte",
            "description": "point.key &lt;= range.lte"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "Range",
        "description": "Range filter request"
      },
      "ResponseType": {
        "type": "string",
        "enum": [
          "raw",
          "completion"
        ],
        "title": "ResponseType",
        "description": "Response format options for search results."
      },
      "RetrievalStrategy": {
        "type": "string",
        "enum": [
          "hybrid",
          "neural",
          "keyword"
        ],
        "title": "RetrievalStrategy",
        "description": "Retrieval strategies for search."
      },
      "ScheduleConfig": {
        "properties": {
          "cron": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cron",
            "description": "Cron expression for scheduled syncs"
          },
          "continuous": {
            "type": "boolean",
            "title": "Continuous",
            "description": "Enable continuous sync mode",
            "default": false
          },
          "cursor_field": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cursor Field",
            "description": "Field for incremental sync"
          }
        },
        "type": "object",
        "title": "ScheduleConfig",
        "description": "Schedule configuration for syncs."
      },
      "ScheduleDetails": {
        "properties": {
          "cron": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cron"
          },
          "next_run": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Run"
          },
          "continuous": {
            "type": "boolean",
            "title": "Continuous",
            "default": false
          },
          "cursor_field": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cursor Field"
          },
          "cursor_value": {
            "anyOf": [
              {},
              {
                "type": "null"
              }
            ],
            "title": "Cursor Value"
          }
        },
        "type": "object",
        "title": "ScheduleDetails",
        "description": "Schedule information."
      },
      "ScheduleResponse": {
        "properties": {
          "schedule_id": {
            "type": "string",
            "title": "Schedule Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "schedule_id",
          "status",
          "message"
        ],
        "title": "ScheduleResponse",
        "description": "Response for schedule operations."
      },
      "SearchRequest": {
        "properties": {
          "query": {
            "type": "string",
            "title": "Query",
            "description": "The search query text"
          },
          "retrieval_strategy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RetrievalStrategy"
              },
              {
                "type": "null"
              }
            ],
            "description": "The retrieval strategy to use"
          },
          "filter": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Filter"
              },
              {
                "type": "null"
              }
            ],
            "description": "Qdrant native filter for metadata-based filtering"
          },
          "offset": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Offset",
            "description": "Number of results to skip"
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Limit",
            "description": "Maximum number of results to return"
          },
          "temporal_relevance": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Temporal Relevance",
            "description": "Weight recent content higher than older content; 0 = no recency effect, 1 = only recent items matter"
          },
          "expand_query": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expand Query",
            "description": "Generate a few query variations to improve recall"
          },
          "interpret_filters": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interpret Filters",
            "description": "Extract structured filters from natural-language query"
          },
          "rerank": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rerank",
            "description": "Reorder the top candidate results for improved relevance. Max number of results that can be reranked is capped to around 1000."
          },
          "generate_answer": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Generate Answer",
            "description": "Generate a natural-language answer to the query"
          }
        },
        "type": "object",
        "required": [
          "query"
        ],
        "title": "SearchRequest",
        "description": "Search request schema."
      },
      "SearchResponse": {
        "properties": {
          "results": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Results",
            "description": "Array of search result objects containing the found documents, records, or data entities."
          },
          "completion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion",
            "description": "This provides natural language answers to your query based on the content found across your connected data sources when generate_answer is true."
          }
        },
        "type": "object",
        "required": [
          "results",
          "completion"
        ],
        "title": "SearchResponse",
        "description": "Comprehensive search response containing results and metadata."
      },
      "SearchStatus": {
        "type": "string",
        "enum": [
          "success",
          "no_relevant_results",
          "no_results"
        ],
        "title": "SearchStatus",
        "description": "Status indicators for search operation outcomes."
      },
      "SingleActionCheckResponse": {
        "properties": {
          "allowed": {
            "type": "boolean",
            "title": "Allowed",
            "description": "Whether the action is allowed for the organization"
          },
          "action": {
            "type": "string",
            "title": "Action",
            "description": "The action type that was checked"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "payment_required",
                  "usage_limit_exceeded"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason",
            "description": "Reason why the action is not allowed (if applicable)"
          },
          "details": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Details",
            "description": "Additional details about why the action is not allowed"
          }
        },
        "type": "object",
        "required": [
          "allowed",
          "action"
        ],
        "title": "SingleActionCheckResponse",
        "description": "Response schema for single action permission check.",
        "examples": [
          {
            "action": "queries",
            "allowed": true
          }
        ]
      },
      "Source": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Human-readable name of the data source connector (e.g., 'GitHub', 'Stripe', 'PostgreSQL')."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Detailed description explaining what data this source can extract and its typical use cases."
          },
          "auth_methods": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth Methods",
            "description": "List of supported authentication methods (e.g., 'direct', 'oauth_browser')."
          },
          "oauth_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Oauth Type",
            "description": "OAuth token type for OAuth sources (e.g., 'access_only', 'with_refresh')."
          },
          "requires_byoc": {
            "type": "boolean",
            "title": "Requires Byoc",
            "description": "Whether this OAuth source requires users to bring their own client.",
            "default": false
          },
          "auth_config_class": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth Config Class",
            "description": "Python class name that defines the authentication configuration fields required for this source (only for DIRECT auth)."
          },
          "config_class": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config Class",
            "description": "Python class name that defines the source-specific configuration options and parameters."
          },
          "short_name": {
            "type": "string",
            "title": "Short Name",
            "description": "Technical identifier used internally to reference this source type. Must be unique across all sources."
          },
          "class_name": {
            "type": "string",
            "title": "Class Name",
            "description": "Python class name of the source implementation that handles data extraction logic."
          },
          "output_entity_definition_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output Entity Definition Ids",
            "description": "List of entity definition IDs that this source can produce. Defines the data schema and structure that this connector outputs."
          },
          "labels": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels",
            "description": "Categorization tags to help users discover and filter sources by domain or use case."
          },
          "supports_continuous": {
            "type": "boolean",
            "title": "Supports Continuous",
            "description": "Whether this source supports cursor-based continuous syncing for incremental data extraction. Sources with this capability can track their sync position and resume from where they left off.",
            "default": false
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Unique system identifier for this source type. Generated automatically when the source is registered."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Timestamp when this source type was registered in the system (ISO 8601 format)."
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At",
            "description": "Timestamp when this source type was last updated (ISO 8601 format)."
          },
          "auth_fields": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Fields"
              },
              {
                "type": "null"
              }
            ],
            "description": "Schema definition for authentication fields required to connect to this source. Only present for sources using DIRECT authentication. OAuth sources handle authentication through browser flows."
          },
          "config_fields": {
            "$ref": "#/components/schemas/Fields",
            "description": "Schema definition for configuration fields required to customize this source. Describes field types, validation rules, and user interface hints."
          },
          "supported_auth_providers": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Supported Auth Providers",
            "description": "List of auth provider short names that support this source (e.g., ['composio', 'pipedream']). Computed dynamically for API responses. This field is not stored in the database."
          }
        },
        "type": "object",
        "required": [
          "name",
          "short_name",
          "class_name",
          "id",
          "created_at",
          "modified_at",
          "config_fields"
        ],
        "title": "Source",
        "description": "Complete source representation with authentication and configuration schemas.",
        "examples": [
          {
            "auth_config_class": "GitHubAuthConfig",
            "auth_fields": {
              "fields": [
                {
                  "description": "Personal Access Token with repository read permissions. Generate one at https://github.com/settings/tokens",
                  "name": "personal_access_token",
                  "secret": true,
                  "title": "Personal Access Token",
                  "type": "string"
                }
              ]
            },
            "auth_methods": [
              "direct"
            ],
            "class_name": "GitHubSource",
            "config_class": "GitHubConfig",
            "config_fields": {
              "fields": [
                {
                  "description": "Full repository name in format 'owner/repo' (e.g., 'airweave-ai/airweave')",
                  "name": "repo_name",
                  "title": "Repository Name",
                  "type": "string"
                },
                {
                  "description": "Specific branch to sync (e.g., 'main', 'development'). If empty, uses the default branch.",
                  "name": "branch",
                  "title": "Branch name",
                  "type": "string"
                }
              ]
            },
            "created_at": "2024-01-01T00:00:00Z",
            "description": "Connect to GitHub repositories for code, issues, pull requests, and documentation",
            "id": "550e8400-e29b-41d4-a716-446655440000",
            "labels": [
              "code"
            ],
            "modified_at": "2024-01-01T00:00:00Z",
            "name": "GitHub",
            "output_entity_definition_ids": [
              "def12345-6789-abcd-ef01-234567890abc",
              "def67890-abcd-ef01-2345-67890abcdef1"
            ],
            "short_name": "github",
            "supported_auth_providers": []
          },
          {
            "auth_methods": [
              "oauth_browser",
              "oauth_token",
              "oauth_byoc"
            ],
            "class_name": "GmailSource",
            "config_class": "GmailConfig",
            "config_fields": {
              "fields": [
                {
                  "default": true,
                  "description": "Whether to sync email attachments",
                  "name": "sync_attachments",
                  "title": "Sync Attachments",
                  "type": "boolean"
                }
              ]
            },
            "created_at": "2024-01-01T00:00:00Z",
            "description": "Connect to Gmail for email threads, messages, and attachments",
            "id": "660e8400-e29b-41d4-a716-446655440001",
            "labels": [
              "Communication",
              "Email"
            ],
            "modified_at": "2024-01-01T00:00:00Z",
            "name": "Gmail",
            "oauth_type": "with_refresh",
            "output_entity_definition_ids": [
              "abc12345-6789-abcd-ef01-234567890abc",
              "abc67890-abcd-ef01-2345-67890abcdef1"
            ],
            "short_name": "gmail",
            "supported_auth_providers": [
              "pipedream",
              "composio"
            ]
          }
        ]
      },
      "SourceConnection": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "short_name": {
            "type": "string",
            "title": "Short Name"
          },
          "readable_collection_id": {
            "type": "string",
            "title": "Readable Collection Id"
          },
          "status": {
            "$ref": "#/components/schemas/SourceConnectionStatus"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "auth": {
            "$ref": "#/components/schemas/AuthenticationDetails"
          },
          "config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config"
          },
          "schedule": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ScheduleDetails"
              },
              {
                "type": "null"
              }
            ]
          },
          "sync": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SyncDetails"
              },
              {
                "type": "null"
              }
            ]
          },
          "entities": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EntitySummary"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "short_name",
          "readable_collection_id",
          "status",
          "created_at",
          "modified_at",
          "auth"
        ],
        "title": "SourceConnection",
        "description": "Complete source connection details."
      },
      "SourceConnectionCreate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 42,
                "minLength": 4
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Connection name (defaults to '{Source Name} Connection')"
          },
          "short_name": {
            "type": "string",
            "title": "Short Name",
            "description": "Source identifier (e.g., 'slack', 'github')"
          },
          "readable_collection_id": {
            "type": "string",
            "title": "Readable Collection Id",
            "description": "Collection readable ID"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Connection description"
          },
          "config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config",
            "description": "Source-specific configuration"
          },
          "schedule": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ScheduleConfig"
              },
              {
                "type": "null"
              }
            ]
          },
          "sync_immediately": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sync Immediately",
            "description": "Run initial sync after creation. Defaults to True for direct/token/auth_provider, False for OAuth browser/BYOC flows (which sync after authentication)"
          },
          "authentication": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DirectAuthentication"
              },
              {
                "$ref": "#/components/schemas/OAuthTokenAuthentication"
              },
              {
                "$ref": "#/components/schemas/OAuthBrowserAuthentication"
              },
              {
                "$ref": "#/components/schemas/AuthProviderAuthentication"
              },
              {
                "type": "null"
              }
            ],
            "title": "Authentication",
            "description": "Authentication config (defaults to OAuth browser flow for OAuth sources)"
          },
          "redirect_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Redirect Url",
            "description": "URL to redirect to after OAuth flow completes (only used for OAuth flows)"
          }
        },
        "type": "object",
        "required": [
          "short_name",
          "readable_collection_id"
        ],
        "title": "SourceConnectionCreate",
        "description": "Create source connection with nested authentication."
      },
      "SourceConnectionJob": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "source_connection_id": {
            "type": "string",
            "format": "uuid",
            "title": "Source Connection Id"
          },
          "status": {
            "$ref": "#/components/schemas/SyncJobStatus"
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "duration_seconds": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Seconds"
          },
          "entities_inserted": {
            "type": "integer",
            "title": "Entities Inserted",
            "default": 0
          },
          "entities_updated": {
            "type": "integer",
            "title": "Entities Updated",
            "default": 0
          },
          "entities_deleted": {
            "type": "integer",
            "title": "Entities Deleted",
            "default": 0
          },
          "entities_failed": {
            "type": "integer",
            "title": "Entities Failed",
            "default": 0
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "error_details": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Details"
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_connection_id",
          "status"
        ],
        "title": "SourceConnectionJob",
        "description": "Individual sync job for a source connection."
      },
      "SourceConnectionListItem": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "short_name": {
            "type": "string",
            "title": "Short Name"
          },
          "readable_collection_id": {
            "type": "string",
            "title": "Readable Collection Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "is_authenticated": {
            "type": "boolean",
            "title": "Is Authenticated"
          },
          "entity_count": {
            "type": "integer",
            "title": "Entity Count",
            "default": 0
          },
          "auth_method": {
            "$ref": "#/components/schemas/AuthenticationMethod",
            "description": "Get authentication method from database value.",
            "readOnly": true
          },
          "status": {
            "$ref": "#/components/schemas/SourceConnectionStatus",
            "description": "Compute connection status from current state.",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "short_name",
          "readable_collection_id",
          "created_at",
          "modified_at",
          "is_authenticated",
          "auth_method",
          "status"
        ],
        "title": "SourceConnectionListItem",
        "description": "Clean source connection for list views."
      },
      "SourceConnectionStatus": {
        "type": "string",
        "enum": [
          "active",
          "pending_auth",
          "syncing",
          "error",
          "inactive",
          "pending_sync"
        ],
        "title": "SourceConnectionStatus",
        "description": "Source connection status enum - represents overall connection state."
      },
      "SourceConnectionUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 42,
                "minLength": 4
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config",
            "description": "Source-specific configuration"
          },
          "schedule": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ScheduleConfig"
              },
              {
                "type": "null"
              }
            ]
          },
          "authentication": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DirectAuthentication"
              },
              {
                "$ref": "#/components/schemas/OAuthTokenAuthentication"
              },
              {
                "$ref": "#/components/schemas/OAuthBrowserAuthentication"
              },
              {
                "$ref": "#/components/schemas/AuthProviderAuthentication"
              },
              {
                "type": "null"
              }
            ],
            "title": "Authentication",
            "description": "Authentication config (defaults to OAuth browser flow for OAuth sources)"
          }
        },
        "type": "object",
        "title": "SourceConnectionUpdate",
        "description": "Update schema for source connections."
      },
      "SubscriptionInfo": {
        "properties": {
          "plan": {
            "type": "string",
            "title": "Plan",
            "description": "Current billing plan"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Subscription status"
          },
          "trial_ends_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trial Ends At",
            "description": "Trial end date"
          },
          "grace_period_ends_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grace Period Ends At",
            "description": "Grace period end date"
          },
          "current_period_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Period Start",
            "description": "Current billing period start"
          },
          "current_period_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Period End",
            "description": "Current billing period end"
          },
          "cancel_at_period_end": {
            "type": "boolean",
            "title": "Cancel At Period End",
            "description": "Whether subscription will cancel at period end",
            "default": false
          },
          "limits": {
            "additionalProperties": true,
            "type": "object",
            "title": "Limits",
            "description": "Plan limits"
          },
          "is_oss": {
            "type": "boolean",
            "title": "Is Oss",
            "description": "Whether using OSS version",
            "default": false
          },
          "has_active_subscription": {
            "type": "boolean",
            "title": "Has Active Subscription",
            "description": "Whether has active Stripe subscription",
            "default": false
          },
          "in_trial": {
            "type": "boolean",
            "title": "In Trial",
            "description": "Whether currently in trial period",
            "default": false
          },
          "in_grace_period": {
            "type": "boolean",
            "title": "In Grace Period",
            "description": "Whether currently in grace period",
            "default": false
          },
          "payment_method_added": {
            "type": "boolean",
            "title": "Payment Method Added",
            "description": "Whether payment method is added",
            "default": false
          },
          "requires_payment_method": {
            "type": "boolean",
            "title": "Requires Payment Method",
            "description": "Whether payment method is required now",
            "default": false
          },
          "pending_plan_change": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pending Plan Change",
            "description": "Plan that will take effect at period end"
          },
          "pending_plan_change_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pending Plan Change At",
            "description": "When the pending plan change takes effect"
          },
          "has_yearly_prepay": {
            "type": "boolean",
            "title": "Has Yearly Prepay",
            "description": "Whether organization has an active yearly prepay credit",
            "default": false
          },
          "yearly_prepay_started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Yearly Prepay Started At",
            "description": "When yearly prepay was started"
          },
          "yearly_prepay_expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Yearly Prepay Expires At",
            "description": "When yearly prepay expires"
          },
          "yearly_prepay_amount_cents": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Yearly Prepay Amount Cents",
            "description": "Total amount (in cents) credited for yearly prepay"
          },
          "yearly_prepay_coupon_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Yearly Prepay Coupon Id",
            "description": "Coupon ID used for yearly prepay"
          },
          "yearly_prepay_payment_intent_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Yearly Prepay Payment Intent Id",
            "description": "Payment intent ID used for yearly prepay"
          }
        },
        "type": "object",
        "required": [
          "plan",
          "status",
          "limits"
        ],
        "title": "SubscriptionInfo",
        "description": "Subscription information response."
      },
      "Sync": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "source_connection_id": {
            "type": "string",
            "format": "uuid",
            "title": "Source Connection Id"
          },
          "embedding_model_connection_id": {
            "type": "string",
            "format": "uuid",
            "title": "Embedding Model Connection Id",
            "default": "33333333-3333-3333-3333-333333333333"
          },
          "destination_connection_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Destination Connection Ids"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "cron_schedule": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cron Schedule"
          },
          "next_scheduled_run": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Scheduled Run"
          },
          "temporal_schedule_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Temporal Schedule Id"
          },
          "sync_type": {
            "type": "string",
            "title": "Sync Type",
            "default": "full"
          },
          "sync_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sync Metadata"
          },
          "status": {
            "$ref": "#/components/schemas/SyncStatus"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "created_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Email"
          },
          "modified_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified By Email"
          }
        },
        "type": "object",
        "required": [
          "name",
          "source_connection_id",
          "destination_connection_ids",
          "status",
          "id",
          "organization_id",
          "created_at",
          "modified_at"
        ],
        "title": "Sync",
        "description": "Schema for Sync."
      },
      "SyncCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "source_connection_id": {
            "type": "string",
            "format": "uuid",
            "title": "Source Connection Id"
          },
          "embedding_model_connection_id": {
            "type": "string",
            "format": "uuid",
            "title": "Embedding Model Connection Id",
            "default": "33333333-3333-3333-3333-333333333333"
          },
          "destination_connection_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Destination Connection Ids"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "cron_schedule": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cron Schedule"
          },
          "next_scheduled_run": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Scheduled Run"
          },
          "temporal_schedule_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Temporal Schedule Id"
          },
          "sync_type": {
            "type": "string",
            "title": "Sync Type",
            "default": "full"
          },
          "sync_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sync Metadata"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SyncStatus"
              },
              {
                "type": "null"
              }
            ],
            "default": "active"
          },
          "run_immediately": {
            "type": "boolean",
            "title": "Run Immediately",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name",
          "source_connection_id",
          "destination_connection_ids"
        ],
        "title": "SyncCreate",
        "description": "Schema for creating a Sync object."
      },
      "SyncDag": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "sync_id": {
            "type": "string",
            "format": "uuid",
            "title": "Sync Id"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "created_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Email"
          },
          "modified_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified By Email"
          },
          "nodes": {
            "items": {
              "$ref": "#/components/schemas/DagNode"
            },
            "type": "array",
            "title": "Nodes"
          },
          "edges": {
            "items": {
              "$ref": "#/components/schemas/DagEdge"
            },
            "type": "array",
            "title": "Edges"
          }
        },
        "type": "object",
        "required": [
          "name",
          "sync_id",
          "id",
          "organization_id",
          "nodes",
          "edges"
        ],
        "title": "SyncDag",
        "description": "Schema for a sync DAG definition.\n\nThe DAG structure as the UI displays it.\n\nThis means that for each entity, there is a node that is the producer and a node that is the\nconsumer. These are connected by an edge: producer -edge-> entity -edge-> consumer\n\nSources, transformers, and destinations are also nodes, but they do not have an\nentity_definition_id.\n\nSources are producers by default, and destinations are consumers by default.\nTransformers are both producers and consumers."
      },
      "SyncDagCreate-Input": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "sync_id": {
            "type": "string",
            "format": "uuid",
            "title": "Sync Id"
          },
          "nodes": {
            "items": {
              "$ref": "#/components/schemas/DagNodeCreate"
            },
            "type": "array",
            "title": "Nodes"
          },
          "edges": {
            "items": {
              "$ref": "#/components/schemas/DagEdgeCreate"
            },
            "type": "array",
            "title": "Edges"
          }
        },
        "type": "object",
        "required": [
          "name",
          "sync_id",
          "nodes",
          "edges"
        ],
        "title": "SyncDagCreate",
        "description": "Schema for creating a sync DAG definition."
      },
      "SyncDagCreate-Output": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "sync_id": {
            "type": "string",
            "format": "uuid",
            "title": "Sync Id"
          },
          "nodes": {
            "items": {
              "$ref": "#/components/schemas/DagNodeCreate"
            },
            "type": "array",
            "title": "Nodes"
          },
          "edges": {
            "items": {
              "$ref": "#/components/schemas/DagEdgeCreate"
            },
            "type": "array",
            "title": "Edges"
          }
        },
        "type": "object",
        "required": [
          "name",
          "sync_id",
          "nodes",
          "edges"
        ],
        "title": "SyncDagCreate",
        "description": "Schema for creating a sync DAG definition."
      },
      "SyncDagUpdate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "sync_id": {
            "type": "string",
            "format": "uuid",
            "title": "Sync Id"
          },
          "nodes": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DagNodeCreate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nodes"
          },
          "edges": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DagEdgeCreate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Edges"
          }
        },
        "type": "object",
        "required": [
          "name",
          "sync_id"
        ],
        "title": "SyncDagUpdate",
        "description": "Schema for updating a sync DAG definition."
      },
      "SyncDetails": {
        "properties": {
          "total_runs": {
            "type": "integer",
            "title": "Total Runs",
            "default": 0
          },
          "successful_runs": {
            "type": "integer",
            "title": "Successful Runs",
            "default": 0
          },
          "failed_runs": {
            "type": "integer",
            "title": "Failed Runs",
            "default": 0
          },
          "last_job": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SyncJobDetails"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "SyncDetails",
        "description": "Sync execution details."
      },
      "SyncJob": {
        "properties": {
          "sync_id": {
            "type": "string",
            "format": "uuid",
            "title": "Sync Id"
          },
          "status": {
            "$ref": "#/components/schemas/SyncJobStatus",
            "default": "pending"
          },
          "scheduled": {
            "type": "boolean",
            "title": "Scheduled",
            "default": false
          },
          "entities_inserted": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entities Inserted",
            "default": 0
          },
          "entities_updated": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entities Updated",
            "default": 0
          },
          "entities_deleted": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entities Deleted",
            "default": 0
          },
          "entities_kept": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entities Kept",
            "default": 0
          },
          "entities_skipped": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entities Skipped",
            "default": 0
          },
          "entities_encountered": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entities Encountered",
            "default": {}
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "failed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Failed At"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "access_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Access Token"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "created_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Email"
          },
          "modified_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified By Email"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "modified_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified At"
          },
          "sync_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sync Name",
            "description": "Name of the sync, populated from join query"
          }
        },
        "type": "object",
        "required": [
          "sync_id",
          "id",
          "organization_id"
        ],
        "title": "SyncJob",
        "description": "Schema for SyncJob."
      },
      "SyncJobDetails": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "status": {
            "$ref": "#/components/schemas/SyncJobStatus"
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "duration_seconds": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Seconds"
          },
          "entities_inserted": {
            "type": "integer",
            "title": "Entities Inserted",
            "default": 0
          },
          "entities_updated": {
            "type": "integer",
            "title": "Entities Updated",
            "default": 0
          },
          "entities_deleted": {
            "type": "integer",
            "title": "Entities Deleted",
            "default": 0
          },
          "entities_failed": {
            "type": "integer",
            "title": "Entities Failed",
            "default": 0
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "id",
          "status"
        ],
        "title": "SyncJobDetails",
        "description": "Sync job details."
      },
      "SyncJobStatus": {
        "type": "string",
        "enum": [
          "created",
          "pending",
          "running",
          "completed",
          "failed",
          "cancelling",
          "cancelled"
        ],
        "title": "SyncJobStatus",
        "description": "Sync job status enum."
      },
      "SyncStatus": {
        "type": "string",
        "enum": [
          "active",
          "inactive",
          "error"
        ],
        "title": "SyncStatus",
        "description": "Sync status enum."
      },
      "SyncUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "cron_schedule": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cron Schedule"
          },
          "next_scheduled_run": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Scheduled Run"
          },
          "sync_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sync Metadata"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SyncStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "temporal_schedule_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Temporal Schedule Id"
          },
          "sync_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sync Type"
          }
        },
        "type": "object",
        "title": "SyncUpdate",
        "description": "Schema for updating a Sync object."
      },
      "SyncWithSourceConnection": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "source_connection_id": {
            "type": "string",
            "format": "uuid",
            "title": "Source Connection Id"
          },
          "embedding_model_connection_id": {
            "type": "string",
            "format": "uuid",
            "title": "Embedding Model Connection Id",
            "default": "33333333-3333-3333-3333-333333333333"
          },
          "destination_connection_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Destination Connection Ids"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "cron_schedule": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cron Schedule"
          },
          "next_scheduled_run": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Scheduled Run"
          },
          "temporal_schedule_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Temporal Schedule Id"
          },
          "sync_type": {
            "type": "string",
            "title": "Sync Type",
            "default": "full"
          },
          "sync_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sync Metadata"
          },
          "status": {
            "$ref": "#/components/schemas/SyncStatus"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "created_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Email"
          },
          "modified_by_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified By Email"
          },
          "source_connection": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Connection"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "source_connection_id",
          "destination_connection_ids",
          "status",
          "id",
          "organization_id",
          "created_at",
          "modified_at"
        ],
        "title": "SyncWithSourceConnection",
        "description": "Schema for Sync with source connection."
      },
      "Transformer": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "method_name": {
            "type": "string",
            "title": "Method Name"
          },
          "module_name": {
            "type": "string",
            "title": "Module Name"
          },
          "input_entity_definition_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Input Entity Definition Ids"
          },
          "output_entity_definition_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Output Entity Definition Ids"
          },
          "config_schema": {
            "additionalProperties": true,
            "type": "object",
            "title": "Config Schema"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "created_by_email": {
            "type": "string",
            "title": "Created By Email"
          },
          "modified_by_email": {
            "type": "string",
            "title": "Modified By Email"
          }
        },
        "type": "object",
        "required": [
          "name",
          "method_name",
          "module_name",
          "input_entity_definition_ids",
          "output_entity_definition_ids",
          "id",
          "organization_id",
          "created_by_email",
          "modified_by_email"
        ],
        "title": "Transformer",
        "description": "Schema for a transformer."
      },
      "TransformerCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "method_name": {
            "type": "string",
            "title": "Method Name"
          },
          "module_name": {
            "type": "string",
            "title": "Module Name"
          },
          "input_entity_definition_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Input Entity Definition Ids"
          },
          "output_entity_definition_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Output Entity Definition Ids"
          },
          "config_schema": {
            "additionalProperties": true,
            "type": "object",
            "title": "Config Schema"
          }
        },
        "type": "object",
        "required": [
          "name",
          "method_name",
          "module_name",
          "input_entity_definition_ids",
          "output_entity_definition_ids"
        ],
        "title": "TransformerCreate",
        "description": "Schema for creating a transformer."
      },
      "TransformerUpdate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "method_name": {
            "type": "string",
            "title": "Method Name"
          },
          "module_name": {
            "type": "string",
            "title": "Module Name"
          },
          "input_entity_definition_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Input Entity Definition Ids"
          },
          "output_entity_definition_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Output Entity Definition Ids"
          },
          "config_schema": {
            "additionalProperties": true,
            "type": "object",
            "title": "Config Schema"
          }
        },
        "type": "object",
        "required": [
          "name",
          "method_name",
          "module_name",
          "input_entity_definition_ids",
          "output_entity_definition_ids"
        ],
        "title": "TransformerUpdate",
        "description": "Schema for updating a transformer."
      },
      "UpdatePlanRequest": {
        "properties": {
          "plan": {
            "type": "string",
            "title": "Plan",
            "description": "New plan (developer, startup)"
          },
          "period": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Period",
            "description": "Billing period for the plan: 'monthly' or 'yearly'",
            "default": "monthly"
          }
        },
        "type": "object",
        "required": [
          "plan"
        ],
        "title": "UpdatePlanRequest",
        "description": "Request to update subscription plan."
      },
      "UsageDashboard": {
        "properties": {
          "current_period": {
            "$ref": "#/components/schemas/BillingPeriodUsage",
            "description": "Current billing period usage"
          },
          "previous_periods": {
            "items": {
              "$ref": "#/components/schemas/BillingPeriodUsage"
            },
            "type": "array",
            "maxItems": 6,
            "title": "Previous Periods",
            "description": "Historical billing periods"
          },
          "total_entities_all_time": {
            "type": "integer",
            "title": "Total Entities All Time",
            "description": "Total entities processed all time",
            "default": 0
          },
          "total_queries_all_time": {
            "type": "integer",
            "title": "Total Queries All Time",
            "description": "Total queries executed all time",
            "default": 0
          },
          "average_daily_entities": {
            "type": "integer",
            "title": "Average Daily Entities",
            "description": "Average entities per day (current period)",
            "default": 0
          },
          "average_daily_queries": {
            "type": "integer",
            "title": "Average Daily Queries",
            "description": "Average queries per day (current period)",
            "default": 0
          },
          "trends": {
            "items": {
              "$ref": "#/components/schemas/UsageTrend"
            },
            "type": "array",
            "title": "Trends",
            "description": "Usage trends compared to previous period"
          }
        },
        "type": "object",
        "required": [
          "current_period"
        ],
        "title": "UsageDashboard",
        "description": "Complete dashboard data.",
        "examples": [
          {
            "average_daily_entities": 3000,
            "average_daily_queries": 6,
            "current_period": {
              "daily_usage": [],
              "days_remaining": 16,
              "is_current": true,
              "period_end": "2024-01-31T23:59:59Z",
              "period_id": "550e8400-e29b-41d4-a716-446655440000",
              "period_start": "2024-01-01T00:00:00Z",
              "plan": "developer",
              "status": "active",
              "usage": {
                "billing_period_id": "550e8400-e29b-41d4-a716-446655440000",
                "entities": 45000,
                "max_entities": 100000,
                "max_queries": 1000,
                "max_source_connections": 10,
                "max_team_members": 2,
                "queries": 89,
                "source_connections": 3,
                "team_members": 2,
                "timestamp": "2024-01-15T12:00:00Z"
              }
            },
            "previous_periods": [],
            "total_entities_all_time": 150000,
            "total_queries_all_time": 500,
            "trends": [
              {
                "direction": "up",
                "metric": "entities",
                "percentage_change": 12.5
              }
            ]
          }
        ]
      },
      "UsageSnapshot": {
        "properties": {
          "entities": {
            "type": "integer",
            "title": "Entities",
            "description": "Total entities processed"
          },
          "queries": {
            "type": "integer",
            "title": "Queries",
            "description": "Search queries executed"
          },
          "source_connections": {
            "type": "integer",
            "title": "Source Connections",
            "description": "Source connections configured"
          },
          "team_members": {
            "type": "integer",
            "title": "Team Members",
            "description": "Team members in the organization"
          },
          "max_entities": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Entities",
            "description": "Maximum entities allowed"
          },
          "max_queries": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Queries",
            "description": "Maximum queries allowed"
          },
          "max_source_connections": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Source Connections",
            "description": "Maximum source connections allowed"
          },
          "max_team_members": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Team Members",
            "description": "Maximum team members allowed"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "When this snapshot was taken"
          },
          "billing_period_id": {
            "type": "string",
            "format": "uuid",
            "title": "Billing Period Id",
            "description": "Associated billing period"
          }
        },
        "type": "object",
        "required": [
          "entities",
          "queries",
          "source_connections",
          "team_members",
          "timestamp",
          "billing_period_id"
        ],
        "title": "UsageSnapshot",
        "description": "Point-in-time usage data with limits."
      },
      "UsageTrend": {
        "properties": {
          "metric": {
            "type": "string",
            "title": "Metric",
            "description": "Metric name (syncs, entities, etc)"
          },
          "direction": {
            "type": "string",
            "title": "Direction",
            "description": "Trend direction: up, down, or stable"
          },
          "percentage_change": {
            "type": "number",
            "title": "Percentage Change",
            "description": "Percentage change from previous period"
          }
        },
        "type": "object",
        "required": [
          "metric",
          "direction",
          "percentage_change"
        ],
        "title": "UsageTrend",
        "description": "Usage trend information."
      },
      "User": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name",
            "default": "Superuser"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "auth0_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth0 Id"
          },
          "primary_organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Primary Organization Id"
          },
          "user_organizations": {
            "items": {
              "$ref": "#/components/schemas/UserOrganization"
            },
            "type": "array",
            "title": "User Organizations"
          },
          "is_admin": {
            "type": "boolean",
            "title": "Is Admin",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "email",
          "id"
        ],
        "title": "User",
        "description": "Schema for User."
      },
      "UserCreate": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name",
            "default": "Superuser"
          },
          "auth0_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth0 Id"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "UserCreate",
        "description": "Schema for creating a User object."
      },
      "UserOrganization": {
        "properties": {
          "role": {
            "type": "string",
            "title": "Role",
            "default": "member"
          },
          "is_primary": {
            "type": "boolean",
            "title": "Is Primary",
            "default": false
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "organization_id",
          "organization"
        ],
        "title": "UserOrganization",
        "description": "Schema for UserOrganization relationship with full organization details."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "ValuesCount": {
        "properties": {
          "lt": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lt",
            "description": "point.key.length() &lt; values_count.lt"
          },
          "gt": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gt",
            "description": "point.key.length() &gt; values_count.gt"
          },
          "gte": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gte",
            "description": "point.key.length() &gt;= values_count.gte"
          },
          "lte": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lte",
            "description": "point.key.length() &lt;= values_count.lte"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "ValuesCount",
        "description": "Values count filter request"
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key",
        "description": "API key for authentication"
      }
    }
  },
  "tags": [
    {
      "name": "collections",
      "x-display-name": "Collections",
      "description": "API endpoints for managing collections - logical groups of data sources that provide unified search capabilities"
    },
    {
      "name": "source-connections",
      "x-display-name": "Source Connections",
      "description": "API endpoints for managing live connections to data sources. Source connections are the actual configured instances that Airweave uses to sync data from your apps and databases, transforming it into searchable, structured information within collections"
    },
    {
      "name": "sources",
      "x-display-name": "Sources",
      "description": "API endpoints for discovering available data source connectors and their configuration requirements"
    }
  ],
  "servers": [
    {
      "url": "https://api.airweave.ai",
      "description": "Production",
      "x-fern-server-name": "Production"
    },
    {
      "url": "http://localhost:8001",
      "description": "Local",
      "x-fern-server-name": "Local"
    }
  ]
}