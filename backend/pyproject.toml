[tool.poetry]
name = "airweave"
version = "0.1.0"
description = "Make any app searchable - Universal search and agent integration tool"
authors = [
    "Rauf Akdemir <rauf@airweave.ai>",
    "Lennert Jansen <lennert@airweave.ai>",
]
packages = [{ include = "airweave" }]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.115.12"
uvicorn = { extras = ["standard"], version = "^0.27.0" }
sqlalchemy = { extras = ["asyncio"], version = "^2.0.25" }
alembic = "^1.13.1"
asyncpg = "^0.29.0"
pydantic = { extras = ["email"], version = "^2.5.3" }
python-jose = { extras = ["cryptography"], version = "^3.3.0" }
passlib = { extras = ["bcrypt"], version = "^1.7.4" }
python-multipart = "^0.0.6"
python-dotenv = "^1.0.0"
httpx = "^0.28.0"
redis = "^4.6.0"
tenacity = "^8.2.3"
structlog = "^24.1.0"
pydantic-settings = "^2.7.0"
psycopg2-binary = "^2.9.10"
weaviate = "^0.1.2"
weaviate-client = "^4.10.2"
markitdown = "^0.0.1a3"
neo4j = "^5.27.0"
pyodbc = "^5.2.0"
aiomysql = "^0.2.0"
aiosqlite = "^0.21.0"
aioodbc = "^0.5.0"
oracledb = "^2.5.1"
aiofiles = "^24.1.0"
croniter = "^6.0.0"
qdrant-client = "^1.13.3"
openai = "^1.109.1"
mistralai = "^1.7.0"
chonkie = { extras = ["code"], version = "^1.0.6" }
tiktoken = "^0.11.0"
fastapi-auth0 = "^0.5.0"
chardet = "^5.2.0"
anthropic = "^0.50.0"
azure-keyvault = "^4.2.0"
firecrawl-py = "^2.7.0"
temporalio = "^1.8.0"
azure-storage-blob = "^12.25.1"
azure-identity = "^1.23.0"
posthog = "^5.4.0"
aiolimiter = "^1.1.0"
pyyaml = "^6.0.1"
fastembed = "^0.7.1"
stripe = "^11.3.0"
tabulate = "^0.9.0"
pdfminer-six = "^20250506"
resend = "^2.13.1"
groq = "^0.31.1"
cohere = "^5.13.11"
cryptography = "^46.0.2"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-asyncio = "^0.23.5"
pytest-cov = "^4.1.0"
pytest-xdist = "^3.6.1"
black = "^24.1.1"
isort = "^5.13.2"
mypy = "^1.8.0"
ruff = "^0.9.6"
pre-commit = "^3.6.0"
httpx = "^0.28.0"
faker = "^22.5.1"
aioresponses = "^0.7.6"
types-python-jose = "^3.3.4"
types-passlib = "^1.7.7"
mcp = "^1.3.0"
vulture = "^2.10"
watchfiles = "^1.1.0"
debugpy = "^1.8.16"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'


[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 100
extend_skip = ["backend (old, neena, only for inspiration)"]


[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.ruff]
line-length = 100
target-version = "py311"
extend-exclude = ["alembic", "local.py", "fern/**", "tests"]

[tool.ruff.lint]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "C", # flake8-comprehensions
    "B", # flake8-bugbear
    "D", # flake8-docstrings
]
ignore = [
    "B008",  # ignore fastapi dependency injection warning
    "B904",  # ignore raise-without-from within except clauses
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["D104"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
docstring-code-format = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "-v --cov=airweave --cov-report=term-missing --cov-report=xml:coverage.xml"
markers = [
    "unit: mark a test as a unit test",
    "integration: mark a test as an integration test",
    "e2e: mark a test as an end-to-end test",
    "slow: mark a test as slow running",
]
extend-exclude = ["backend (old, neena, only for inspiration)"]
